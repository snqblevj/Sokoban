"""
TODO
"""


class SokobanModel:
    """
    TODO
    """

    def __init__(self):
        """
        TODO
        """
        self.__views = None
        self.__level = 1

        if self.__level == 1:
            self.__matrix = [
                            [0,0,1,1,1,1,1,0],
                            [1,1,1,2,2,2,1,0],
                            [1,4,2,3,2,2,1,0],
                            [1,1,1,2,3,4,1,0],
                            [1,4,1,1,3,2,1,1],
                            [1,2,1,2,4,2,1,1],
                            [1,3,3,4,3,3,4,1],
                            [1,2,2,2,4,2,2,1],
                            [1,1,1,1,1,1,1,1]
                            ]
            self.__playerPos = (2, 2)

        if self.__level == 2:
            self.__matrix = [
                            [0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0],
                            [0,0,0,0,1,2,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0],
                            [0,0,0,0,1,3,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0],
                            [0,0,1,1,1,2,2,3,1,1,1,0,0,0,0,0,0,0,0,0,0,0],
                            [0,0,1,2,2,3,2,2,3,2,1,0,0,0,0,0,0,0,0,0,0,0],  
                            [1,1,1,2,1,2,1,1,1,2,1,0,0,0,0,0,1,1,1,1,1,1],
                            [1,2,2,2,1,2,1,1,1,2,1,1,1,1,1,1,1,2,2,4,4,1],
                            [1,2,3,2,2,3,2,2,2,2,2,2,2,2,2,2,2,2,2,4,4,1],
                            [1,1,1,1,1,2,1,1,1,1,2,1,2,1,1,1,1,2,2,4,4,1],
                            [0,0,0,0,1,2,2,2,2,2,2,1,1,1,0,0,1,1,1,1,1,1],
                            [0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0]
                            ]
            self.__playerPos = (8, 12)

        

    # 0 = vide
    # 1 = mur
    # 2 = sol
    # 3 = caisse
    # 4 = trou
    # 5 = sprite
        self.__nbPas=0
        
    def clear(self):
        """
        TODO
        """
        if self.__level == 1:
            self.__matrix = [
                      [0,0,1,1,1,1,1,0],#0 
                      [1,1,1,2,2,2,1,0],#1
                      [1,4,2,3,2,2,1,0],#2
                      [1,1,1,2,3,4,1,0],#3
                      [1,4,1,1,3,2,1,1],#4
                      [1,2,1,2,4,2,1,1],#5
                      [1,3,3,4,3,3,4,1],#6
                      [1,2,2,2,4,2,2,1],#7
                      [1,1,1,1,1,1,1,1]#8
                        ]
            self.__playerPos = (2, 2)            

        if self.__level == 2:
            self.__matrix = [
                            [0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0],
                            [0,0,0,0,1,2,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0],
                            [0,0,0,0,1,3,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0],
                            [0,0,1,1,1,2,2,3,1,1,1,0,0,0,0,0,0,0,0,0,0,0],
                            [0,0,1,2,2,3,2,2,3,2,1,0,0,0,0,0,0,0,0,0,0,0],  
                            [1,1,1,2,1,2,1,1,1,2,1,0,0,0,0,0,1,1,1,1,1,1],
                            [1,2,2,2,1,2,1,1,1,2,1,1,1,1,1,1,1,2,2,4,4,1],
                            [1,2,3,2,2,3,2,2,2,2,2,2,2,2,2,2,2,2,2,4,4,1],
                            [1,1,1,1,1,2,1,1,1,1,2,1,2,1,1,1,1,2,2,4,4,1],
                            [0,0,0,0,1,2,2,2,2,2,2,1,1,1,0,0,1,1,1,1,1,1],
                            [0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0]
                            ]
            self.__playerPos = (8, 12)
        self.__nbPas=0


    def addView(self, view):
        """
        TODO
        """
        self.__views=view

    def get(self, l, c):
        """
        TODO
        """
        return self.__matrix[l][c]

    def set(self, l, c, v):
        """
        TODO
        """
        self.__matrix[l][c] = v

        self.__views.updateView()

    def getPlayerPos(self):
        return self.__playerPos

    def setPlayerPos(self, crd):
        self.__playerPos=crd

    def setNbPas(self,pas):
        self.__nbPas=pas
    
    def getNbPas(self):
        return self.__nbPas

    def getMatrix(self):
        return self.__matrix

    def getLevel(self):
        return self.__level

    def addLevel(self):
        self.__level +=1
        self.clear()
        self.__views.view2()